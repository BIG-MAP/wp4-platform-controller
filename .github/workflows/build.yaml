name: Build
on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.lock'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'
      - 'pyproject.lock'
      - 'Dockerfile'

jobs:
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.9' ]
    env:
      DOCKER_IMAGE_NAME: nokal/wp4-platform-controller
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        shell: bash
        run: pip install poetry

      - name: Install project
        run: |
          poetry install
      
      - name: Get version
        id: get_version
        run: |
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - name: Build
        run: |
          poetry build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wp4-platform-controller-py${{ matrix.python-version }}-${{ steps.get_version.outputs.version }}
          path: dist
      
      - name: Finish if not on main branch
        if: github.ref != 'refs/heads/main'
        run: exit 0

      - name: Generate changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md
          git log --pretty=format:"%h - %s (%an)" $(git describe --tags --abbrev=0)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md

      - name: Assign repository tag
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push --tags

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          tag_name: ${{ steps.get_version.outputs.version }}
          body_path: CHANGELOG.md

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: nokal
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}
          cache-to: type=inline